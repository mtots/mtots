

final m1 = Matrix.zero()
m1.changeOfBasis(
  V(-1,  1,  0), V(  0,  0, 0),
  V( 1,  1,  0), V( 80,  0, 0),
  V( 1, -1,  0), V( 80, 60, 0),
  V(-1,  1,  1), V(  0,  0, 1),
)

print("m1.apply(V(-1,  1,  0)) = %s" % [m1.apply(V(-1,  1,  0))])
print("m1.apply(V( 1,  1,  0)) = %s" % [m1.apply(V( 1,  1,  0))])
print("m1.apply(V( 1, -1,  0)) = %s" % [m1.apply(V( 1, -1,  0))])
print("m1.apply(V(-1,  1,  1)) = %s" % [m1.apply(V(-1,  1,  1))])

final m2 = Matrix.zero()
m2.changeOfBasis(
  V(  0,  0, 0), V(-1,  1,  0),
  V( 80,  0, 0), V( 1,  1,  0),
  V( 80, 60, 0), V( 1, -1,  0),
  V(  0,  0, 1), V(-1,  1,  1),
)
print("m2.apply(V(  0,  0, 0)) = %s" % [m2.apply(V(  0,  0, 0))])
print("m2.apply(V( 80,  0, 0)) = %s" % [m2.apply(V( 80,  0, 0))])
print("m2.apply(V( 80, 60, 0)) = %s" % [m2.apply(V( 80, 60, 0))])
print("m2.apply(V(  0,  0, 1)) = %s" % [m2.apply(V(  0,  0, 1))])

print("m1 * m2 = %s" % [m1 * m2])
