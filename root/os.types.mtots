r"""
Miscellaneous operating system interfaces

Implements a subset of Python's os module, and adds a few things not in Python's version.
(Compare with https://docs.python.org/3/library/os.html)
"""
import os.path as path

final name "A human readable name of the current operating system" = 'macos'
final sep = path.sep


def getlogin() String:
  """
  Return the name of the user logged in on the controlling terminal of the
  process
  """


def getpid() Int:
  """
  Return the current process id
  """


def getppid() Int:
  """
  Return the parent's process id.
  When the parent process has exited, on Unix the id returned is
  the one of the init process (1), on Windows it is still the same id,
  which may be already reused by another process.
  """


def getuid() Int:
  """
  Return the current process's real user id.
  """


def geteuid() Int:
  """
  Return the current process's effective user id.
  """


def getenv(name String) String?:
  """
  Looks up an environment variable.
  Returns nil if not found.
  """


def getcwd() String:
  """
  Return a string representing the current working directory
  """


def chdir(path String) nil:
  """
  Changes the current working directory to the one indicated by the
  given path
  """

def listdir(path String = ".") List[String]:
  """
  Return a list containing the names of the entries in the
  directory given by path.
  The list is in arbitrary order, and does not include the special
  entries `'.'` and `'..'` even if they are present in the directory.
  If a file is removed from or added to the directory during the
  call of this function, whether a name for that file be included
  is unspecified.
  """


def isPosix() Bool:
  """
  Returns true if the platform is detected to be POSIX or at least UNIX-like.

  Specifically, this function returns true if, when Mtots was compiled:
    * C macro `__unix__` was defined, or
    * C macro `_unix` was defined, or
    * C macros `__APPLE__` and `__MACH__` were both defined

  otherwise, this function returns false.
  """


def isDarwin() Bool:
  """
  Returns true if the current platform is detected to be MacOS or iOS
  """


def isMacOS() Bool:
  """
  Returns true if the current platform is detected to be MacOS
  """


def isWindows() Bool:
  """
  Returns true if the current platform is detected to be Windows
  """


def isLinux() Bool:
  """
  Returns true if the current platform is detected to be Linux
  """


def isIPhone() Bool:
  """
  Returns true if the current platform is detected to be iOS
  """


def isAndroid() Bool:
  """
  Returns true if the current platform is detected to be Android
  """
